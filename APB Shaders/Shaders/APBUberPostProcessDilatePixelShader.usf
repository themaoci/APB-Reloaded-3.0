/***************************************************************************************/
/*! \file APBUberPostProcessDilatePixelShader.usf
*
* \brief Pixel shader for dilating the foreground circle-of-confusion prior to blurring it.
*
* \b NOW_OWNER: SJT    2/8/2010 <BR>
*
* (c) 2010 Realtime Worlds Ltd.
****************************************************************************************/

#include "Common.usf"

sampler2D FilterTexture;

void Main(
	float4 InOffsetUVs[(NUM_SAMPLES + 1) / 2] : TEXCOORD0,
	out float4 OutColor : COLOR0
	)
{
	int SampleIndex;
	half MaxCoC = 0;

	UNROLL
	for (SampleIndex = 0;SampleIndex < NUM_SAMPLES - 1;SampleIndex += 2)
	{
		MaxCoC = max(MaxCoC, tex2D(FilterTexture,InOffsetUVs[SampleIndex / 2].xy).a);
		MaxCoC = max(MaxCoC, tex2D(FilterTexture,InOffsetUVs[SampleIndex / 2].wz).a);
	}
	if(SampleIndex < NUM_SAMPLES)
	{
		MaxCoC = max(MaxCoC, tex2D(FilterTexture,InOffsetUVs[SampleIndex / 2].xy).a);
	}

	// First sample is the centre pixel, so get the colour from there.
	half3 Colour = tex2D(FilterTexture, InOffsetUVs[0].xy).rgb;

	OutColor = float4(Colour, MaxCoC);
}
