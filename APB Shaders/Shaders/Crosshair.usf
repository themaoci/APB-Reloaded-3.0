/***************************************************************************************/
/*! \file Crosshair.usf
* 
* Adds a crosshair to APBr
* 
* 
* Owned by dreamss, some code stolen from tobii and spec
*
* variable crosshair size added by Kimiko
* and pretty much every change after that ... DYNAMIC_COLOR, internal color options, and making it work on rtw/1.9.1 shaders
* fuckshadercoding
*
* Thanks to Blizzie for the alternative crosshair shapes Dot 2, Circle, and Cross
* Thanks to Inteoix for OPGL-shaped crosshairs and pointing out how to fix alpha
*
*
* Usage: 
*  Add '#include "Crosshair.usf"' to  APBUberPostProcessBlendPixelShader.usf before the bottom closing "}".
*   view the included APBUberPostProcessBlendPixelShader.usf if you have questions
*  Edit CrosshairSettings.usf to set your screen size and other options.
*
* You don't need to make changes to this file - See CrosshairSettings.usf
* IF THE GAME CRASHES CROSSHAIR_SIZE IS WAY TOO BIG!
****************************************************************************************/

{
#include "_Settings.usf"
	
 
#if ENABLE_CROSSHAIR
#define CROSSHAIR_PIXEL_SCAN_OFFSET_1 0.5-(CROSSHAIR_PIXEL_SCAN_LIMIT/200)
#define CROSSHAIR_PIXEL_SCAN_OFFSET_2 0.5+(CROSSHAIR_PIXEL_SCAN_LIMIT/200)

if (SceneUV.x > CROSSHAIR_PIXEL_SCAN_OFFSET_1 && SceneUV.y > CROSSHAIR_PIXEL_SCAN_OFFSET_1) {
if (SceneUV.x < CROSSHAIR_PIXEL_SCAN_OFFSET_2 && SceneUV.y < CROSSHAIR_PIXEL_SCAN_OFFSET_2) {
  #define aspectRatio SCREEN_SIZE_X/SCREEN_SIZE_Y
  float2 ScreenSize = float2( CROSSHAIR_DOT_1_SIZE / SCREEN_SIZE_X , CROSSHAIR_DOT_1_SIZE / SCREEN_SIZE_Y );
  int CROSSHAIR_PIXEL_DRAWN = 0;
  if (CROSSHAIR_PIXEL_DRAWN == 0) {
	  if(ENABLE_CROSSHAIR_DOT_1)
		#include "_CType_Dot1.usf"
	  if(ENABLE_CROSSHAIR_DOT_2)
		#include "_CType_Dot2.usf"
  }
  
}}//since it runs this per pixel, Im limiting the area of the screen where it checks to see if it will draw the crosshair ie better perfomance
#endif // ENABLE_CROSSHAIR
}