/*=============================================================================
	DOFAndBloomCommon.usf: Code which is common to depth of field shaders.
	Copyright 1998-2008 Epic Games, Inc. All Rights Reserved.
=============================================================================*/

// APB(SJT): Major modifications made to this file to support more-easily tweakable DoF parameters.

/** The packed parameters. */
half4 PackedParameters;

// Amount to multiple depth by for near and far blur.
static half2 NearFarScale = PackedParameters.xy;

// Amount to add to depth for near and far blur.
static half2 NearFarBias = PackedParameters.zw;

/** clamp for min/max blur amount values - default would be [1,1] */
float2 MinMaxBlurClamp;

/**
 * Computes the unfocused percent for a scene depth.
 * @param SceneDepth - The scene depth.
 * @return A unfocused percent for the depth.
 */
half CalcUnfocusedPercent(float SceneDepth)
{
	// Apply simple scale & bias to depth to get focus percent.
	half2 NearFarBlur = SceneDepth.xx * NearFarScale + NearFarBias;

	// Clamp to max blur value.
	NearFarBlur = min(NearFarBlur, MinMaxBlurClamp);

	// Take maximum of the two and saturate to [0,1].
	return saturate(max(NearFarBlur.x, NearFarBlur.y));
}

// APB(SJT) +

/**
 * Computes the foreground-only unfocused percent for a scene depth.
 * @param SceneDepth - The scene depth.
 * @return A unfocused foreground percent for the depth.
 */
half CalcForegroundUnfocusedPercent(float SceneDepth)
{
	half Blur = SceneDepth * NearFarScale.x + NearFarBias.x;
	Blur = min(Blur, MinMaxBlurClamp.x);
	return saturate(Blur);
}

/**
 * Computes the background-only unfocused percent for a scene depth.
 * @param SceneDepth - The scene depth.
 * @return A unfocused foreground percent for the depth.
 */
half CalcBackgroundUnfocusedPercent(float SceneDepth)
{
	half Blur = SceneDepth * NearFarScale.y + NearFarBias.y;
	Blur = min(Blur, MinMaxBlurClamp.y);
	return saturate(Blur);
}

// APB(SJT) -
